//Import ERA5 data (original 11km) (ERA5 Land Daily Aggregate)
var time_start = '2010', time_end = '2020'

var era = imageCollection.select('skin_temperature')
.filterDate(time_start, time_end)

//Import MODIS data (predictor) (MODIS Terra Land surface Temperature)
var mod = imageCollection2.select('LST_Day_1km')
.filterDate(time_start, time_end)

//print(era.limit(10))
//print(mod.limit(10))

Map.addLayer(era.first(),{},'era5',false)
Map.addLayer(mod.first(),{},'modis',false)

//join both data
var join = ee.Join.inner() // collect data of same date from two separate collection
var filter = ee.Filter.equals({
  leftField:'system:time_start',rightField:'system:time_start'
});

var join_collection = ee.ImageCollection(join.apply(era, mod, filter));

var collection = join_collection.map(function(img){     //Convert era5 and modis from feature to image
  var era_img = ee.Image(img.get('primary'))
  var era_resample = era_img.resample().reproject({crs:'EPSG:4326', scale:1000})   //Resample era5 from 11 km to 1 km- resample pixel size
  var mod_img = ee.Image(img.get('secondary')).multiply(0.02)
  var cons = ee.Image.constant(1)
  var stack = ee.Image.cat([era_resample,cons,mod_img])
  return stack
})
//print(collection.limit(10))

//Perform Regression Modeling
var model = collection.reduce(ee.Reducer.linearRegression(2,1))
//print(model)
var gain = model.select('coefficients').arrayGet([0,0])       //show difference between original and predictor
var offset = model.select('coefficients').arrayGet([1,0])

//Prediction
var era1970 = imageCollection.select('skin_temperature')
.filterDate('1970','1971')
.map(function(img){
  var resampled = img.resample().reproject({crs:'EPSG:4326',scale:1000})
  var predicted = resampled.multiply(gain).add(offset).rename('predicted')   //1km
  return resampled.addBands(predicted)
  .copyProperties(img, img.propertyNames())
})

Map.addLayer(era1970.select('skin_temperature').first().clip(geometry), {}, 'original',false)
Map.addLayer(era1970.select('predicted').first().clip(geometry), {}, 'predicted',false)

//Correction for downscaling to increase the accuracy  correction = model + (original-model_mean)
var prediction_mean = era1970.select('predicted').mean()

var cor = era1970.map(function(img){
  var original = img.select('skin_temperature')
  var predicted = img.select('predicted')
  var index = predicted.add(original.subtract(prediction_mean))
  return index
  .copyProperties(img, img.propertyNames())
})

Map.addLayer(cor.first().clip(geometry),{},'corrected',false)


Export.image.toDrive({
  image: era1970.select('predicted').first(),
  description: 'era1km_1970',
  scale:1000,
  region: geometry,
  crs: 'EPSG:4326',
  maxPixels:1e13,
  folder: 'test_eradownscale'
})

Export.image.toDrive({
  image: cor.first(),
  description: 'era1km_1970_cor',
  scale:1000,
  region: geometry,
  crs: 'EPSG:4326',
  maxPixels:1e13,
  folder: 'test_eradownscale'
})
